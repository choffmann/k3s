apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      name: {{ .Values.appName }}
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: vaultwarden/server:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ .Values.appName }}-configmap
          env:
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appName }}-smtp
                  key: emailUser
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appName }}-smtp
                  key: emailPassword
            - name: PUSH_INSTALLATION_ID
              valueFrom:
                secretKeyRef:
                  name: {{.Values.appName }}-push
                  key: pushId
            - name: PUSH_INSTALLATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.Values.appName}}-push
                  key: pushKey
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{.Values.appName}}-admin
                  key: adminToken
          ports:
            - containerPort: 80
            - name: websocket
              containerPort: 3012
          volumeMounts:
            - mountPath: /data/
              name: {{ .Values.appName }}-pvc
      volumes:
        - name: {{ .Values.appName }}-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.appName }}-pvc
      restartPolicy: Always
      